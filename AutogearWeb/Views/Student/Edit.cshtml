@model AutogearWeb.Models.StudentModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <h2>Student Personal Details</h2>
        @Html.HiddenFor(model => model.StudentNumber)
        <div class="row">
            <div class="col-xs-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-sm-2 control-label no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Last Name" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.Gender, Model.GendersList, new { @class = "col-xs-10 col-sm-8" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-9">
                        <div class="input-group col-xs-10 col-sm-8">
                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control date-pickerSD", placeholder = "YYYY-MM-DD" } })
                            <span class="input-group-addon">
                                <i class="fa fa-calendar bigger-110"></i>
                            </span>
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-9">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(model => model.Status, new { @class = "ace ace-switch" })
                                <span class="lbl"></span>
                            </label>
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Address1" } })
                        @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Address2" } })
                        @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!--
                <div class="form-group">
                    @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Postal Code" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>-->
                <div class="form-group">
                    @Html.LabelFor(model => model.SuburbName, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.SuburbName, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Suburb Name or Postal code" } })
                        @Html.ValidationMessageFor(model => model.SuburbName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Mobile" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <h2>Student License Details</h2>
        <div class="row">
            <div class="col-xs-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LicenseNumber, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.LicenseNumber, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "License Number" } })
                        @Html.ValidationMessageFor(model => model.LicenseNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.StateId, Model.StatesList, new { @class = "col-xs-10 col-sm-8", placeholder = "State" })
                        @Html.ValidationMessageFor(model => model.LicenseNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        <div class="input-group col-xs-10 col-sm-8">
                            @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control date-pickerED", placeholder = "YYYY-MM-DD" } })
                            <span class="input-group-addon">
                                <i class="fa fa-calendar bigger-110"></i>
                            </span>
                            @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.InstructorNumber, htmlAttributes: new {@class = "control-label col-sm-2 no-padding-right"})
                    <div class="col-sm-6">
                        @Html.DropDownListFor(model => model.InstructorNumber, Model.InstructorList, new {@class = "chosen-select form-control", data_placeholder = "Choose a Instructor..."})
                    </div>
                </div>
                <div class="form-group instructorRemarks" style="display: none;">
                    @Html.LabelFor(model => model.InstructorRemarks, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-7">
                        @Html.TextAreaFor(model => model.InstructorRemarks, new { @class = "col-xs-10", @style = "resize: none;", placeholder = "Remarks" })
                    </div>
                </div>
            </div>
            <div class="col-xs-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.LicensePassedDate, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        <div class="input-group col-xs-10 col-sm-8">
                            @Html.EditorFor(model => model.LicensePassedDate, new { htmlAttributes = new { @class = "form-control date-pickerLPD", placeholder = "YYYY-MM-DD" } })
                            <span class="input-group-addon">
                                <i class="fa fa-calendar bigger-110"></i>
                            </span>
                            @Html.ValidationMessageFor(model => model.LicensePassedDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.ClassName, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Class Name" } })
                        @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.TextAreaFor(model => model.Remarks, new { @class = "col-xs-10 col-sm-8",@style = "resize: none;", placeholder = "Remarks" })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-12">
                        @Html.CheckBoxFor(model => model.IsInternationalLicensed, new { htmlAttributes = new { @class = "col-sm-2" } })
                        @Html.LabelFor(model => model.IsInternationalLicensed, new { @class = "col-sm-4" })
                    </div>
                    <div class="col-sm-12 Country">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right Country" })
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Country" } })
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @*<h2>Lesson Booking</h2>
    <div class="row">
        <div class="col-xs-6">
            <div class="form-group">
                @Html.LabelFor(model => model.PackageId, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(model => model.PackageId, Model.LearningPackages, new { @class = "col-xs-10 col-sm-8" })
                    @Html.ValidationMessageFor(model => model.PackageId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PackageDetails, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.PackageDetails, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Package Details" } })
                    @Html.ValidationMessageFor(model => model.PackageDetails, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PackageDisacount, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.PackageDisacount, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Package Disacount" } })
                    @Html.ValidationMessageFor(model => model.PackageDisacount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PickupLocation, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.PickupLocation, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Pickup Location" } })
                    @Html.ValidationMessageFor(model => model.PickupLocation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-xs-6">
            <div class="form-group">
                @Html.LabelFor(model => model.BookingStartDate, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    <div class="input-group col-xs-10 col-sm-8">
                        @Html.EditorFor(model => model.BookingStartDate, new { htmlAttributes = new { @class = "form-control date-pickerBD", placeholder = "YYYY-MM-DD" } })
                        <span class="input-group-addon">
                            <i class="fa fa-calendar bigger-110"></i>
                        </span>
                        @Html.ValidationMessageFor(model => model.BookingStartDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BookingEndDate, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    <div class="input-group col-xs-10 col-sm-8">
                        @Html.EditorFor(model => model.BookingEndDate, new { htmlAttributes = new { @class = "form-control date-pickerBD", placeholder = "YYYY-MM-DD" } })
                        <span class="input-group-addon">
                            <i class="fa fa-calendar bigger-110"></i>
                        </span>
                        @Html.ValidationMessageFor(model => model.BookingEndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Start Time" } })
                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StopTime, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.StopTime, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Stop Time" } })
                    @Html.ValidationMessageFor(model => model.StopTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DropLocation, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.DropLocation, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Drop Location" } })
                    @Html.ValidationMessageFor(model => model.DropLocation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <h2>Driving Test Booking</h2>
    <div class="row">
        <div class="col-xs-6">
            <div class="form-group">
                @Html.LabelFor(model => model.DrivingTestPackageId, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.DropDownListFor(model => model.DrivingTestPackageId, Model.LearningPackages, new { @class = "col-xs-10 col-sm-8" })
                    @Html.ValidationMessageFor(model => model.DrivingTestPackageId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DrivingTestPackageDetails, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.DrivingTestPackageDetails, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Package Details" } })
                    @Html.ValidationMessageFor(model => model.DrivingTestPackageDetails, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DrivingTestPackageDisacount, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.DrivingTestPackageDisacount, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8" } })
                    @Html.ValidationMessageFor(model => model.DrivingTestPackageDisacount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">

                @Html.LabelFor(model => model.DrivingTestPickupLocation, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.DrivingTestPickupLocation, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Pickup Location" } })
                    @Html.ValidationMessageFor(model => model.DrivingTestPickupLocation, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="col-xs-6">
            <div class="form-group">
                @Html.LabelFor(model => model.DrivingTestDate, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    <div class="input-group col-xs-10 col-sm-8">
                        @Html.EditorFor(model => model.DrivingTestDate, new { htmlAttributes = new { @class = "form-control date-pickerDTD", placeholder = "YYYY-MM-DD" } })
                        <span class="input-group-addon">
                            <i class="fa fa-calendar bigger-110"></i>
                        </span>
                        @Html.ValidationMessageFor(model => model.DrivingTestDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DrivingTestStartTime, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.DrivingTestStartTime, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Start Time" } })
                    @Html.ValidationMessageFor(model => model.DrivingTestStartTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DrivingTestStopTime, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.DrivingTestStopTime, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Stop Time" } })
                    @Html.ValidationMessageFor(model => model.DrivingTestStopTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DrivingTestDropLocation, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.DrivingTestDropLocation, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Drop Location" } })
                    @Html.ValidationMessageFor(model => model.DrivingTestDropLocation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>*@

        <div class="row">
            <div class="clearfix form-actions">
                <div class="col-md-offset-4 col-md-8">
                    <button class="btn btn-info" type="submit">
                        <i class="ace-icon fa fa-check bigger-110"></i>
                        Save
                    </button>
                    &nbsp; &nbsp; &nbsp;
                    <a href="@Url.Action("Index")" class="btn">
                        <i class="ace-icon fa fa-undo bigger-110"></i>
                        @Html.Raw("Cancel")
                    </a>
                    @*&nbsp; &nbsp; &nbsp;
                    <a href="@Url.Action("Index")" class="btn btn-danger">
                        <i class="ace-icon fa fa-reply icon-only"></i>
                        @Html.Raw("Back to list")
                    </a>*@
                </div>
            </div>
        </div>

    </div>
}

@section Scripts
{
@Scripts.Render("~/bundles/bootstrap");
@Scripts.Render("~/bundles/bootstrappicker");
    @Scripts.Render("~/bundles/chosenjs");
    @Scripts.Render("~/bundles/jqueryUI");
    <script>
        $(function () {
            //  var postalCodes = [], suburbNames = [];
            $(".chosen-select").chosen();
            var baseUrl = "/Api/AutogearApi/";
            /*$.getJSON(baseUrl + "GetPostCodes", { suburbName: null }).then(function (data) {
                //    postalCodes = data;
                $("#PostalCode").autocomplete({
                    source: data,
                    minLength: 2
                });
            });*/
            $.getJSON(baseUrl + "GetSubUrbs", {}).then(function (data) {
                // postalCodes = data;
                $("#SuburbName").autocomplete({
                    source: function (request, response) {
                        var results = $.ui.autocomplete.filter(data.sort(), request.term);

                        response(results.slice(0, 10));
                    },
                    minLength: 2
                });
            });
            //SuburbName
            $("#StartDate,#ExpiryDate,#LicensePassedDate,#BookingStartDate,#BookingEndDate,#DrivingTestDate").datepicker({
                //minDate: 0,
                dateFormat: "yy-mm-dd",
                changeYear: true,
                changeMonth: true
            });
            $("#InstructorNumber").on("change", function() {
                $(".instructorRemarks").show();
            });
            
            if ($("#IsInternationalLicensed").prop("checked") == true) {
                $("#Country,.Country").css("display", "inline-block");
                $('#StateId').attr('disabled', 'disabled');
            } else {
                $("#Country,.Country").css("display", "none");
                $('#StateId').removeAttr('disabled');
            }
            
            $("#IsInternationalLicensed").on('change', function () {
                if ($(this).prop('checked')) {
                    $('#StateId').attr('disabled', 'disabled');
                    $("#Country,.Country").css("display", "inline-block");
                } else {
                    $('#StateId').removeAttr('disabled');
                    $("#Country,.Country").css("display", "none");
                }
            });
        });
    </script>
}
