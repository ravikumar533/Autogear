@model AutogearWeb.Models.RegisterViewModel
@{
    ViewBag.Title = "New Instructor";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Create Instructor</h2>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "col-xs-10 col-sm-8", placeholder = "First Name"}})
                        @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "col-xs-10 col-sm-8", placeholder = "Last Name"}})
                        @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Gender, Model.GendersList, new {htmlAttributes = new {@class = "col-xs-10 col-sm-8", placeholder = "Gender"}})
                        @Html.ValidationMessageFor(model => model.Gender, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Mobile, new {htmlAttributes = new {@class = "col-xs-10 col-sm-8", placeholder = "Mobile Phone"}})
                        @Html.ValidationMessageFor(model => model.Mobile, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new {htmlAttributes = new {@class = "col-xs-10 col-sm-8", placeholder = "Home Phone"}})
                        @Html.ValidationMessageFor(model => model.Phone, "", new {@class = "text-danger"})
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Confirm Password" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Address1" } })
                        @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Address2" } })
                        @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                    @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Postal Code" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>*@
                <div class="form-group">
                    @Html.LabelFor(model => model.SuburbName, htmlAttributes: new {@class = "control-label col-sm-2 no-padding-right"})
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.SuburbName, new {htmlAttributes = new {@class = "col-xs-10 col-sm-8", placeholder = "Suburb Name or Postal code"}})
                        @Html.ValidationMessageFor(model => model.SuburbName, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Areas, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Areas, new { htmlAttributes = new { @class = "col-xs-10 col-sm-8", placeholder = "Areas" } })
                        @Html.ValidationMessageFor(model => model.Areas, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-sm-2 no-padding-right" })
                    <div class="col-sm-9">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(model => model.Status, new { @class = "ace ace-switch" })
                                <span class="lbl"></span>
                            </label>
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="=row">
            <div class="clearfix form-actions">
                <div class="col-md-offset-3 col-md-9">
                    <button class="btn btn-info" type="submit">
                        <i class="ace-icon fa fa-check bigger-110"></i>
                        Submit
                    </button>
                    &nbsp; &nbsp; &nbsp;
                    <button class="btn" type="reset">
                        <i class="ace-icon fa fa-undo bigger-110"></i>
                        Clear
                    </button>
                    &nbsp; &nbsp; &nbsp;
                    <a href="@Url.Action("Index")" class="btn btn-danger">
                        <i class="ace-icon fa fa-reply icon-only"></i>
                        @Html.Raw("Back to list")
                    </a>
                </div>
            </div>
        </div>
    </div>    
}

<div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryUI");
    @Scripts.Render("~/bundles/jqueryval")

    <script>
            $(function () {
                //  var postalCodes = [], suburbNames = [];
                var baseUrl = "/Api/AutogearApi/";
              
                $.getJSON(baseUrl + "GetSubUrbs", {  }).then(function (data) {
                    // postalCodes = data;
                    $("#SuburbName").autocomplete({
                        source: function (request, response) {
                            var results = $.ui.autocomplete.filter(data.sort(), request.term);

                            response(results.slice(0, 10));
                        },
                        minLength: 2
                    });
                });
                $.getJSON(baseUrl + "GetArea").then(function (data) {
                    //    postalCodes = data;
                    console.log(data);
                    $("#Areas").autocomplete({
                        source: function (request, response) {
                            var results = $.ui.autocomplete.filter(data, request.term);

                            response(results.slice(0, 10));
                        },
                        minLength: 1
                    });
                });
            });
    </script>
}